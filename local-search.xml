<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>学习Java第5天（算法篇1）</title>
    <link href="/-/2025/09/17/%E5%AD%A6%E4%B9%A0Java%E7%9A%84%E7%AC%AC%E4%BA%94%E5%A4%A9/"/>
    <url>/-/2025/09/17/%E5%AD%A6%E4%B9%A0Java%E7%9A%84%E7%AC%AC%E4%BA%94%E5%A4%A9/</url>
    
    <content type="html"><![CDATA[<h3 id="1-最长递增子序列"><a href="#1-最长递增子序列" class="headerlink" title="1.最长递增子序列"></a>1.最长递增子序列</h3><p>&emsp;给你一个整数数组 nums ，找到其中最长严格递增子序列的长度。子序列：是由数组派生而来的序列，删除（或不删除）数组中的元素而不改变其余元素的顺序。例如，[3,6,2,7] 是数组 [0,3,1,6,2,2,7] 的子序列。<br><img src="/-/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-09-17%20201151.png" alt="题解代码"></p><h3 id="2-排列硬币"><a href="#2-排列硬币" class="headerlink" title="2.排列硬币"></a>2.排列硬币</h3><p>&emsp;你总共有 n 枚硬币，并计划将它们按阶梯状排列。对于一个由 k 行组成的阶梯，其第 i 行必须正好有 i 枚硬币。阶梯的最后一行可能是不完整的。给你一个数字 n ，计算并返回可形成完整阶梯行的总行数。<br><img src="/-/img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202025-09-17%20210927.png" alt="题解代码"></p>]]></content>
    
    
    <categories>
      
      <category>算法</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>算法</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
